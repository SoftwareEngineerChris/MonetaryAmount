//
//  Currency+Generated.swift
//  MonetaryAmount
//
//  Created by Chris Hargreaves on 16/09/2018.
//  Copyright Â© 2019 Software Engineering Limited. All rights reserved.
//

import Foundation

// Important
//
// This file is generated by the Currencies Generator target. Please
// do not edit this file directly. The template for this file can be
// found as `Currencies.swift` in the `templates` directory from the 
// project root.
//
// To regenerate this file, in the root of the project, run the command:
//
//     cat currencies.csv | swift run CurrenciesGenerator > ./Sources/MonetaryAmount/Currencies+Generated.swift
//
// File last generated: {{ generatedDate }}
public extension Currency {

    /// Request a currency for a given _ISO 4217_ currency code.
    ///
    /// For example, to obtain the UK Pound:
    ///
    ///     let GBP = Currency.with(currencyCode: "GBP")
    ///
    /// - Parameters:
    ///    - currencyCode: The **ISO standard** currency code. e.g. _"USD"_ for US Dollars
    ///
    /// - Returns:
    ///     If a currency exists for the given `currencyCode` then a configured `Currency`
    ///     will be returned. If no currency exists then `nil` will be returned.
    ///
    static func with(currencyCode: String) -> Currency? {
        return currencyTable[currencyCode]
    }
    {% for currency in currencies %}
    /// {{ currency.currencyName }} ({{ currency.alphaCurrencyCode }}) with minor unit {{ currency.minorUnit }}
    static let {{ currency.alphaCurrencyCode }} = Currency(name: "{{ currency.currencyName }}", code: "{{ currency.alphaCurrencyCode }}", minorUnit: {{ currency.minorUnit }})
    {% endfor %}
    
    /// All standard `Currency` values defined by _ISO 4217_
    static let all: [Currency] = [{% for currency in currencies %}
        {{ currency.alphaCurrencyCode }},{% endfor %}
    ]
    
    static private let currencyTable: [String: Currency] = [{% for currency in currencies %}
        {{ currency.alphaCurrencyCode }}.code: {{ currency.alphaCurrencyCode }}, {% endfor %}
    ]
}
